generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(cuid())
  discordId           String    @unique
  username            String
  discriminator       String?
  avatar              String?
  email               String?
  guilds              String[]  @default([])
  discordAccessToken  String?
  discordRefreshToken String?

  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @default(now()) @updatedAt
}

model Category {
  id                    String   @id @default(cuid())
  guild_id              String   @default("default_guild")
  name                  String
  categoryType          String
  isVisible             Boolean  @default(true)
  trackingActive        Boolean  @default(false)
  sendSetup             Boolean  @default(false)
  allowedRoles          String[] @default([])
  lastUsage             DateTime?
  totalSecondsInCateg   Int      @default(0)
  discordCategoryId     String?
  deletedInDiscord      Boolean  @default(false)
  zones                 Zone[]   // Neue Relation zu Zonen hinzufügen

  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now()) @updatedAt
}

model Zone {
  id                 String     @id @default(cuid())
  guild_id           String     @default("default_guild")
  zoneKey           String
  zoneName           String
  minutesRequired    Int        @default(60)
  pointsGranted      Int        @default(1)
  lastUsage          DateTime?
  totalSecondsInZone Int        @default(0)
  categoryId         String?
  category           Category?  @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  deletedInDiscord   Boolean    @default(false)
  discordId          String?    // Discord-Kanal-ID
  allowedRoles       String[]   @default([]) // Erlaubte Rollen für den Voice-Kanal

  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @default(now()) @updatedAt
}